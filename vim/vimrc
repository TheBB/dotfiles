set nocompatible

" NeoBundle
    filetype off

    if has('vim_starting')
        set rtp+=~/.vim/bundle/neobundle.vim/
    endif

    call neobundle#begin(expand('~/.vim/bundle'))
    " call vundle#rc()

    " NeoBundle runtime path manager
    NeoBundleFetch 'Shougo/neobundle.vim'

    " Colours
    NeoBundle 'TheBB/badwolf'

    " Filesystem
    NeoBundle 'scrooloose/nerdtree'
    NeoBundle 'rking/ag.vim'
    NeoBundle 'kien/ctrlp.vim'

    " Motion
    NeoBundle 'goldfeld/vim-seek'
    NeoBundle 'Lokaltog/vim-easymotion'

    " Text manipulation
    NeoBundle 'scrooloose/nerdcommenter'
    NeoBundle 'godlygeek/tabular'
    NeoBundle 'tpope/vim-surround'

    " Text objects
    NeoBundle 'michaeljsmith/vim-indent-object'
    NeoBundle 'vim-scripts/argtextobj.vim'
    NeoBundle 'bkad/CamelCaseMotion'

    " Language-specific plugins
    NeoBundle 'wting/rust.vim'
    NeoBundle 'TheBB/vim-haskellConceal'
    NeoBundle 'ehamberg/vim-cute-python'
    NeoBundle 'pbrisbin/html-template-syntax'

    " Other
    NeoBundle 'tpope/vim-fugitive'
    NeoBundle 'bling/vim-airline'

    call neobundle#end()

    filetype plugin indent on

    NeoBundleCheck


" Colours
    syntax on
    set t_Co=256
    set background=dark
    let g:badwolf_darkgutter = 1
    let g:badwolf_html_link_underline = 0
    let g:badwolf_css_props_highlight = 1
    colorscheme badwolf

    set t_ZH=[3m
    set t_ZR=[23m


" Buffers instead of tabs
    nnoremap <leader>T :enew<CR>
    nnoremap ]b :bnext<CR>
    nnoremap [b :bprevious<CR>
    nnoremap <leader>bQ :bp <BAR> bd #<CR>
    nnoremap <leader>bl :ls<CR>


" Airline
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#fnamemod = ':t'
    let g:airline#extensions#whitespace#enabled = 0


" CtrlP
    let g:ctrlp_map = '<c-p>'
    let g:ctrlp_cmd = 'CtrlP'


" Tabs
    function! Tabs(t)
        " execute 'set tabstop=' . a:t
        execute 'set shiftwidth=' . a:t
        execute 'set softtabstop=' . a:t
    endfunction
    command! -nargs=1 Tabs :call Tabs(<args>)
    set tabstop=8
    set shiftwidth=4
    set softtabstop=4
    set expandtab


" Folding
    set foldmethod=indent
    set foldcolumn=0
    set foldnestmax=7


" Pasting
    nnoremap <leader>p :set invpaste paste?<CR>


" Command completion
    set wildmenu
    set wildmode=list:full
    cnoremap <C-p> <Up>
    cnoremap <C-n> <Down>
    set history=200


" Searching
    set ignorecase
    set smartcase
    set gdefault
    set incsearch
    set showmatch
    set hlsearch


" Wrapping
    set wrap
    set textwidth=110
    set formatoptions=tnq
    set colorcolumn=110


" Non-textual characters
    set list
    set listchars=tab:â–¸\ ,eol:Â¬


" No scrollbars in gvim
    if has("gui_running")
        set guioptions-=rL
        set guioptions+=a
    endif


" Shortcuts
    " Edit and source this file
    nnoremap <leader>ev :edit $MYVIMRC<CR>
    nnoremap <leader>sv :source $MYVIMRC<CR>

    " jk to enter normal mode
    inoremap jk <Esc>
    vnoremap jk <Esc>

    " Enter and backspace to add empty lines
    nnoremap <CR> o<Esc>k
    nnoremap <BS> O<Esc>j

    " Easier navigation of windows
    nnoremap <C-h> <C-w>h
    nnoremap <C-j> <C-w>j
    nnoremap <C-k> <C-w>k
    nnoremap <C-l> <C-w>l

    " Turn off search highlighting
    nnoremap <leader><Space> :noh<CR>

    " NERDTree
    nnoremap <C-n> :NERDTreeToggle<CR>

    " Tabularize
    nnoremap <leader>= :Tabularize/=<CR>
    nnoremap <leader>: :Tabularize/:\zs<CR>
    nnoremap <leader>, :Tabularize/,\zs<CR>

    " Syntax group under cursor
    nnoremap <leader>h :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
                \ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
                \ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>


" Various uncategorized settings
    set encoding=utf-8
    set scrolloff=3
    set autoindent
    set showmode
    set showcmd
    set hidden
    set novisualbell
    set cursorline
    set ttyfast
    set lazyredraw
    set ruler
    set backspace=indent,eol,start
    set laststatus=2
    set cole=2
    set timeoutlen=300
    set number
    set relativenumber


" TEX: Don't conceal sub- and superscripts
    let g:tex_conceal='adgm'


" Turn off italics if disabled in shell
if $VIM_ITALICS == 0 && !has("gui_running")
    BWToggleItalics
endif
